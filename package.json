{
  "name": "idna-uts46-hx",
  "description": "A UTS #46 processing algorithm for IDNA2008 strings",
  "version": "3.4.0",
  "private": false,
  "author": {
    "name": "Kai Schwarz",
    "email": "kschwarz@hexonet.net"
  },
  "main": "uts46.js",
  "typings": "index.d.ts",
  "license": "MIT",
  "engines": {
    "node": ">=10.18.0",
    "npm": ">=6.13.4"
  },
  "homepage": "https://github.com/hexonet/idna-uts46",
  "repository": "github:hexonet/idna-uts46",
  "bugs": "https://github.com/hexonet/idna-uts46/issues",
  "maintainers": [
    {
      "name": "Kai Schwarz",
      "email": "kschwarz@hexonet.net"
    }
  ],
  "keywords": [
    "hexonet",
    "unicode",
    "idn",
    "idna",
    "domain"
  ],
  "nyc": {
    "reporter": [
      "html",
      "text"
    ],
    "exclude": [
      "**/*.spec.js",
      "idna-map.js"
    ]
  },
  "scripts": {
    "bundle": "browserify -s ispapi-idnconverter uts46.js > uts46bundle.js",
    "minify": "terser -c -o uts46bundle.min.js uts46bundle.js",
    "test": "npm run test-COVERAGE --silent",
    "test-MOCHA": "./node_modules/.bin/_mocha $(find ./test -type f -name '*.spec.js')",
    "test-COVERAGE": "cross-env NODE_ENV=development nyc npm run test-MOCHA --silent",
    "lint": "eslint --fix --config=./.eslintrc.js uts46.js README.md *.json test/*.spec.js && npm run lint-python",
    "lint-python": "./scripts/pep8fix.sh"
  },
  "dependencies": {
    "punycode": "^2.1.1"
  },
  "devDependencies": {
    "@semantic-release/exec": "^5.0.0",
    "@hexonet/semantic-release-github-npm-config": "^2.0.2",
    "browserify": "^17.0.0",
    "cross-env": "^7.0.2",
    "eslint": "^7.12.1",
    "eslint-config-standard": "^16.0.0",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-json": "^2.1.2",
    "eslint-plugin-markdown": "^1.0.2",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-standard": "^5.0.0",
    "mocha": "^8.2.0",
    "nyc": "^15.1.0",
    "requirejs-browser": "^2.1.9",
    "semantic-release": "^17.2.1",
    "terser": "^5.3.8"
  }
}
